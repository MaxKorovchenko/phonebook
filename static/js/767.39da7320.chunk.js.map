{"version":3,"file":"static/js/767.39da7320.chunk.js","mappings":"8MAEaA,EAAiBC,EAAAA,KAAaC,MAAM,CAC/CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACRC,QACC,kBACA,+DAEDC,SAAS,wBACZC,MAAOP,EAAAA,KACJO,MAAM,yBACND,SAAS,qBACZE,SAAUR,EAAAA,KACPG,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACRE,SAAS,0BChBd,GAAgB,UAAY,gCAAgC,MAAQ,4BAA4B,KAAO,2BAA2B,MAAQ,4BAA4B,IAAM,0BAA0B,YAAc,kCAAkC,KAAO,2BAA2B,UAAY,gCAAgC,WAAa,iCAAiC,cAAgB,qC,UCQrXG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOC,UAAUC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAOI,MAAMF,SAAC,cAC7BC,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CACblB,KAAM,GACNK,MAAO,GACPC,SAAU,IAEZa,iBAAkBtB,EAClBuB,SAhBe,SAACC,EAAQC,GAC5Bd,GAASe,EAAAA,EAAAA,IAASF,IAElBC,EAAOE,WACT,EAY6BV,UAEvBJ,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACd,UAAWC,EAAOc,KAAMC,aAAa,MAAKb,SAAA,EAC9CJ,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAOgB,MAAMd,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAAClB,UAAWC,EAAOkB,MAAOC,KAAK,OAAO/B,KAAK,UACjDe,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CACXrB,UAAWC,EAAOqB,UAClBjC,KAAK,OACLkC,UAAU,aAIdxB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAOgB,MAAMd,SAAA,CAAC,SAE9BC,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAAClB,UAAWC,EAAOkB,MAAOC,KAAK,QAAQ/B,KAAK,WAClDe,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CACXrB,UAAWC,EAAOuB,WAClBnC,KAAK,QACLkC,UAAU,aAIdxB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAOgB,MAAMd,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAAClB,UAAWC,EAAOkB,MAAOC,KAAK,WAAW/B,KAAK,cACrDe,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CACXrB,UAAWC,EAAOwB,cAClBpC,KAAK,WACLkC,UAAU,aAIdnB,EAAAA,EAAAA,KAAA,UAAQJ,UAAWC,EAAOyB,IAAKN,KAAK,SAAQjB,SAAC,oBAI7CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAO0B,YAAYxB,SAAA,EACjCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BACHC,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,GAAG,SAAS7B,UAAWC,EAAO6B,KAAK3B,SAAC,sBAQtD,ECrEA,EAJqB,WACnB,OAAOC,EAAAA,EAAAA,KAACR,EAAY,GACtB,C","sources":["helpers/validationSchemas/registerSchema.js","webpack://phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Username must be at least 3 characters')\n    .max(20, 'Username must be at most 20 characters')\n    .matches(\n      /^[a-zA-Z0-9_]+$/,\n      'Username can only contain letters, numbers, and underscores'\n    )\n    .required('Username is required'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .max(30, 'Password must not exceed 30 characters')\n    .required('Password is required'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"title\":\"RegisterForm_title__EvDyW\",\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"btn\":\"RegisterForm_btn__bgTuW\",\"signWrapper\":\"RegisterForm_signWrapper__CWDfr\",\"link\":\"RegisterForm_link__xu2eW\",\"errorName\":\"RegisterForm_errorName__C6ufW\",\"errorEmail\":\"RegisterForm_errorEmail__8bxFg\",\"errorPassword\":\"RegisterForm_errorPassword__RBheE\"};","import { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { ErrorMessage, Field, Formik, Form } from 'formik';\n\nimport { register } from 'redux/auth/operations';\nimport { RegisterSchema } from 'helpers/validationSchemas/registerSchema';\n\nimport styles from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, action) => {\n    dispatch(register(values));\n\n    action.resetForm();\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>REGISTER</h2>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={RegisterSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={styles.form} autoComplete=\"off\">\n          <label className={styles.label}>\n            Username\n            <Field className={styles.input} type=\"text\" name=\"name\" />\n            <ErrorMessage\n              className={styles.errorName}\n              name=\"name\"\n              component=\"span\"\n            />\n          </label>\n\n          <label className={styles.label}>\n            Email\n            <Field className={styles.input} type=\"email\" name=\"email\" />\n            <ErrorMessage\n              className={styles.errorEmail}\n              name=\"email\"\n              component=\"span\"\n            />\n          </label>\n\n          <label className={styles.label}>\n            Password\n            <Field className={styles.input} type=\"password\" name=\"password\" />\n            <ErrorMessage\n              className={styles.errorPassword}\n              name=\"password\"\n              component=\"span\"\n            />\n          </label>\n\n          <button className={styles.btn} type=\"submit\">\n            CREATE ACCOUNT\n          </button>\n\n          <div className={styles.signWrapper}>\n            <p>Already have an account?</p>\n            <Link to=\"/login\" className={styles.link}>\n              Sign In\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["RegisterSchema","Yup","shape","name","min","max","matches","required","email","password","RegisterForm","dispatch","useDispatch","_jsxs","className","styles","container","children","_jsx","title","Formik","initialValues","validationSchema","onSubmit","values","action","register","resetForm","Form","form","autoComplete","label","Field","input","type","ErrorMessage","errorName","component","errorEmail","errorPassword","btn","signWrapper","Link","to","link"],"sourceRoot":""}