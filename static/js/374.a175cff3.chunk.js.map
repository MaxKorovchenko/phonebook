{"version":3,"file":"static/js/374.a175cff3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","helpers/validationSchemas/contactsSchema.js","webpack://phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","webpack://phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://phonebook/./src/components/EditForm/EditForm.module.css?d1fc","components/EditForm/EditForm.jsx","webpack://phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","redux/filter/selectors.js","webpack://phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const useLoading = () => useSelector(selectIsLoading);\n","import * as Yup from 'yup';\n\nconst phoneRegex =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\nconst phoneError =\n  'Valid phone numbers may consist of digits, spaces, dashes, parentheses, and may start with a plus sign';\n\nexport const ContactsSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Please, enter contact name'),\n  number: Yup.string()\n    .matches(phoneRegex, phoneError)\n    .required('Please, enter phone number'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"input\":\"ContactsForm_input__UjXFK\",\"btn\":\"ContactsForm_btn__qImoL\",\"message\":\"ContactsForm_message__ZE1AW\"};","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { ContactsSchema } from 'helpers/validationSchemas/contactsSchema';\n\nimport styles from './ContactsForm.module.css';\n\nexport const ContactsForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, action) => {\n    if (contacts.find(contact => contact.name === values.name)) {\n      return alert(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values));\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={ContactsSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={styles.form} autoComplete=\"off\">\n        <label className={styles.label}>\n          Name\n          <Field className={styles.input} type=\"text\" name=\"name\" required />\n          <ErrorMessage\n            className={styles.message}\n            name=\"name\"\n            component=\"span\"\n          />\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <Field className={styles.input} type=\"tel\" name=\"number\" required />\n          <ErrorMessage\n            className={styles.message}\n            name=\"number\"\n            component=\"span\"\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal\":\"Modal_modal__DJDMv\",\"btn\":\"Modal_btn__ghtlt\"};","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleEscClick = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscClick);\n\n    return () => document.removeEventListener('keydown', handleEscClick);\n  }, [onClose]);\n\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) onClose();\n  };\n\n  return createPortal(\n    <div className={styles.overlay} onClick={handleOverlayClick}>\n      <div className={styles.modal}>\n        {children}\n        <button className={styles.btn} type=\"button\" onClick={onClose}>\n          X\n        </button>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"EditForm_form__AqHH5\",\"label\":\"EditForm_label__Aqw6C\",\"input\":\"EditForm_input__-9yye\",\"btn\":\"EditForm_btn__HQBGr\",\"errorName\":\"EditForm_errorName__t2cA3\",\"errorNumber\":\"EditForm_errorNumber__rkyLw\"};","import { useDispatch } from 'react-redux';\nimport { ErrorMessage, Field, Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { editContact } from 'redux/contacts/operations';\nimport { ContactsSchema } from 'helpers/validationSchemas/contactsSchema';\n\nimport styles from './EditForm.module.css';\n\nexport const EditForm = ({ onClose, id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, action) => {\n    dispatch(editContact({ id, ...values }));\n    onClose();\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name,\n        number,\n      }}\n      validationSchema={ContactsSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={styles.form} autoComplete=\"off\">\n        <label className={styles.label}>\n          Name\n          <Field className={styles.input} type=\"text\" name=\"name\" required />\n          <ErrorMessage\n            className={styles.errorName}\n            name=\"name\"\n            component=\"span\"\n          />\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <Field className={styles.input} type=\"tel\" name=\"number\" required />\n          <ErrorMessage\n            className={styles.errorNumber}\n            name=\"number\"\n            component=\"span\"\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          EDIT CONTACT\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nEditForm.propTypes = {\n  onClose: PropTypes.func,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactItem_wrapper__7BnvP\",\"btn\":\"ContactItem_btn__1h5dG\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Modal } from 'components/Modal/Modal';\nimport { EditForm } from 'components/EditForm/EditForm';\n\nimport styles from './ContactItem.module.css';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    await dispatch(deleteContact(id));\n    setIsDeleting(false);\n  };\n\n  return (\n    <>\n      <p>\n        {name}: {number}\n      </p>\n\n      <div className={styles.wrapper}>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={() => setShowModal(true)}\n        >\n          Edit\n        </button>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={handleDelete}\n          disabled={isDeleting}\n        >\n          {isDeleting ? <ClipLoader color={'#fff'} size={15} /> : 'Delete'}\n        </button>\n      </div>\n\n      {showModal && (\n        <Modal onClose={() => setShowModal(false)}>\n          <EditForm\n            onClose={() => setShowModal(false)}\n            id={id}\n            name={name}\n            number={number}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","export const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ContactsList_section__IE6+j\",\"title\":\"ContactsList_title__Nc-fb\",\"item\":\"ContactsList_item__6gc1x\"};","import { useSelector } from 'react-redux';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport styles from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>Contacts</h2>\n      <ul>\n        {visibleContacts.map(({ id, name, number }) => (\n          <li className={styles.item} key={id}>\n            <ContactItem id={id} name={name} number={number} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport styles from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n};\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllContacts } from 'redux/contacts/operations';\nimport { selectError } from 'redux/contacts/selectors';\n\nconst styles = {\n  container: {\n    width: 800,\n    margin: '20px auto',\n    padding: 20,\n    boxShadow: '1px 1px 10px 5px rgb(224, 213, 213)',\n    backgroundColor: 'rgb(61, 50, 160)',\n  },\n\n  title: {\n    marginBottom: 30,\n    color: 'aliceblue',\n    textAlign: 'center',\n    letterSpacing: '0.03em',\n    textShadow: '2px 2px 10px rgb(1, 10, 13)',\n  },\n};\n\nconst ContactsPage = () => {\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>PHONEBOOK</h1>\n      <ContactsForm />\n      <Filter />\n\n      {error && (\n        <h2\n          style={{\n            textAlign: 'center',\n            fontSize: 24,\n            color: 'aliceblue',\n            padding: 20,\n          }}\n        >\n          something went wrong 😥\n        </h2>\n      )}\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectError","error","ContactsSchema","Yup","shape","name","min","max","required","number","matches","ContactsForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","action","find","contact","alert","concat","addContact","resetForm","children","_jsxs","Form","className","styles","autoComplete","Field","type","ErrorMessage","component","modalRoot","document","querySelector","Modal","_ref","onClose","useEffect","handleEscClick","e","code","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","EditForm","id","editContact","_objectSpread","ContactItem","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","_useState3","_useState4","isDeleting","setIsDeleting","handleDelete","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","deleteContact","stop","apply","arguments","_Fragment","disabled","ClipLoader","color","size","selectFilter","filter","ContactsList","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","Filter","value","onChange","setFilter","container","width","margin","padding","boxShadow","backgroundColor","title","marginBottom","textAlign","letterSpacing","textShadow","getAllContacts","style","fontSize"],"sourceRoot":""}